"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/AddTokenButton.tsx":
/*!********************************!*\
  !*** ./app/AddTokenButton.tsx ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTokenToMetaMask: () => (/* binding */ addTokenToMetaMask),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ addTokenToMetaMask,default auto */ \n\nconst TOKEN_CONFIG = {\n    address: '0x3C85D4cd4243dF9329d984AC5ADdDdCbE633cef5',\n    symbol: 'DRACMA',\n    decimals: 18,\n    image: 'https://DRACMAtoken.com/images/logo.png',\n    chainId: '0x38',\n    chainName: 'Binance Smart Chain'\n};\nconst BSC_CHAIN = {\n    chainId: '0x38',\n    chainName: 'Binance Smart Chain',\n    nativeCurrency: {\n        name: 'BNB',\n        symbol: 'BNB',\n        decimals: 18\n    },\n    rpcUrls: [\n        'https://bsc-dataseed.binance.org/'\n    ],\n    blockExplorerUrls: [\n        'https://bscscan.com'\n    ]\n};\nconst addTokenToMetaMask = async ()=>{\n    if (false) {}\n    if (!window.ethereum) {\n        alert('Por favor instala MetaMask para añadir tokens.');\n        window.open('https://metamask.io/download/', '_blank');\n        return;\n    }\n    try {\n        // Solicitar conexión a la wallet\n        await window.ethereum.request({\n            method: 'eth_requestAccounts'\n        });\n        // Verificar la red actual\n        const chainId = await window.ethereum.request({\n            method: 'eth_chainId'\n        });\n        // Si no estamos en BSC, intentar cambiar la red\n        if (chainId !== TOKEN_CONFIG.chainId) {\n            try {\n                // Intentar cambiar a BSC\n                await window.ethereum.request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [\n                        {\n                            chainId: TOKEN_CONFIG.chainId\n                        }\n                    ]\n                });\n            } catch (switchError) {\n                // Si la red no está añadida, intentar añadirla\n                if (switchError.code === 4902) {\n                    try {\n                        await window.ethereum.request({\n                            method: 'wallet_addEthereumChain',\n                            params: [\n                                BSC_CHAIN\n                            ]\n                        });\n                    } catch (addError) {\n                        alert('No se pudo añadir la red BSC. Por favor, añádela manualmente en MetaMask.');\n                        return;\n                    }\n                } else {\n                    alert('No se pudo cambiar a la red BSC. Por favor, cámbiala manualmente en MetaMask.');\n                    return;\n                }\n            }\n        }\n        // Intentar añadir el token\n        const wasAdded = await window.ethereum.request({\n            method: 'wallet_watchAsset',\n            params: {\n                type: 'ERC20',\n                options: {\n                    address: TOKEN_CONFIG.address,\n                    symbol: TOKEN_CONFIG.symbol,\n                    decimals: TOKEN_CONFIG.decimals,\n                    image: TOKEN_CONFIG.image\n                }\n            }\n        });\n        if (wasAdded) {\n            alert(\"\\xa1Token \".concat(TOKEN_CONFIG.symbol, \" a\\xf1adido exitosamente a MetaMask en la red \").concat(TOKEN_CONFIG.chainName, \"!\"));\n        } else {\n            alert('No se añadió el token.');\n        }\n    } catch (error) {\n        console.error(\"Error al añadir el token:\", error);\n        alert('Ocurrió un error al intentar añadir el token. Por favor, verifica que estés en la red BSC.');\n    }\n};\nconst AddTokenButton = (param)=>{\n    let { className = \"\", buttonText = \"Añadir DRACMA a MetaMask\" } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        onClick: addTokenToMetaMask,\n        className: \"\\n        flex items-center justify-center \\n        px-4 py-2 \\n        rounded-lg \\n        font-medium \\n        bg-blue-600 \\n        hover:bg-blue-700 \\n        text-white \\n        transition-colors\\n        \".concat(className, \"\\n      \"),\n        children: buttonText\n    }, void 0, false, {\n        fileName: \"/Users/alainherrrera/Documents/PreventaDracma/app/AddTokenButton.tsx\",\n        lineNumber: 127,\n        columnNumber: 5\n    }, undefined);\n};\n_c = AddTokenButton;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AddTokenButton);\nvar _c;\n$RefreshReg$(_c, \"AddTokenButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/AddTokenButton.tsx\n"));

/***/ })

});